{
	"info": {
		"_postman_id": "fel-api-collection",
		"name": "FEL API v1 - REST API Collection",
		"description": "Complete REST API with Slim Framework, Eloquent ORM and JWT Authentication - Version 1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8000",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		}
	],
	"item": [
		{
			"name": "API v1",
			"item": [
				{
					"name": "Public",
					"item": [
						{
							"name": "Authentication",
							"item": [
								{
									"name": "Register User",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\",\n    \"phone_number\": \"+1234567890\"\n}"
										},
										"url": {
											"raw": "{{base_url}}/api/v1/register",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"register"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\",\n    \"phone_number\": \"+1234567890\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"register"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Usuario registrado exitosamente\",\n    \"user\": {\n        \"id\": 1,\n        \"uuid\": \"550e8400-e29b-41d4-a716-446655440000\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"full_name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"phone_number\": \"+1234567890\"\n    },\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}"
										},
										{
											"name": "Email Already Exists",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"existing@example.com\",\n    \"password\": \"password123\",\n    \"phone_number\": \"+1234567890\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"register"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"El correo electrónico ya existe\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"first_name\": \"\",\n    \"last_name\": \"\",\n    \"email\": \"invalid-email\",\n    \"password\": \"123\",\n    \"phone_number\": \"invalid\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/register",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"register"
													]
												}
											},
											"status": "Unprocessable Entity",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"errors\": {\n        \"first_name\": [\n            \"first name must not be empty\",\n            \"first name must have a length between 2 and 100\",\n            \"first name must contain only letters\"\n        ],\n        \"last_name\": [\n            \"last name must not be empty\",\n            \"last name must have a length between 2 and 100\",\n            \"last name must contain only letters\"\n        ],\n        \"email\": [\n            \"email must be valid\"\n        ],\n        \"password\": [\n            \"password must have a length greater than or equal to 6\"\n        ],\n        \"phone_number\": [\n            \"phone number must be a valid phone number\"\n        ]\n    }\n}"
										}
									]
								},
								{
									"name": "Login User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"if (pm.response.code === 200) {",
													"    const responseJson = pm.response.json();",
													"    pm.collectionVariables.set(\"jwt_token\", responseJson.token);",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
										},
										"url": {
											"raw": "{{base_url}}/api/v1/login",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"password123\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"login"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Inicio de sesión exitoso\",\n    \"user\": {\n        \"id\": 1,\n        \"uuid\": \"550e8400-e29b-41d4-a716-446655440000\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"full_name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"phone_number\": \"+1234567890\"\n    },\n    \"token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\"\n}"
										},
										{
											"name": "Invalid Credentials",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"john@example.com\",\n    \"password\": \"wrongpassword\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"login"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"Credenciales inválidas\"\n}"
										},
										{
											"name": "Validation Error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"invalid-email\",\n    \"password\": \"\"\n}"
												},
												"url": {
													"raw": "{{base_url}}/api/v1/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"login"
													]
												}
											},
											"status": "Unprocessable Entity",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"errors\": {\n        \"email\": [\n            \"email must be valid\"\n        ],\n        \"password\": [\n            \"password must not be empty\"\n        ]\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Public Routes",
							"item": [
								{
									"name": "Public Endpoint",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/public",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"public"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/api/v1/public",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"public"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Esta es una ruta pública - no requiere autenticación\",\n    \"timestamp\": \"2024-08-29 16:15:30\",\n    \"data\": {\n        \"api_version\": \"1.0\",\n        \"status\": \"active\"\n    }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Private",
					"item": [
						{
							"name": "Account",
							"item": [
								{
									"name": "User Profile",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/private/profile",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"private",
												"profile"
											]
										}
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{jwt_token}}"
													}
												],
												"url": {
													"raw": "{{base_url}}/api/v1/private/profile",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"private",
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"message\": \"Esta es una ruta privada - autenticación requerida\",\n    \"user\": {\n        \"id\": 1,\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\",\n        \"created_at\": \"2024-08-29T16:10:25.000000Z\"\n    },\n    \"timestamp\": \"2024-08-29 16:15:30\"\n}"
										},
										{
											"name": "Missing Authorization Header",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/api/v1/private/profile",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"private",
														"profile"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"Authorization header missing\"\n}"
										},
										{
											"name": "Invalid Token",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer invalid_token_here"
													}
												],
												"url": {
													"raw": "{{base_url}}/api/v1/private/profile",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"private",
														"profile"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"Invalid or expired token\"\n}"
										},
										{
											"name": "Invalid Authorization Format",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "InvalidFormat token_here"
													}
												],
												"url": {
													"raw": "{{base_url}}/api/v1/private/profile",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"api",
														"v1",
														"private",
														"profile"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n    \"error\": \"Invalid authorization format\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Admin Routes",
							"item": [
								{
									"name": "Admin Dashboard",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/admin",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"admin"
											]
										}
									},
									"response": []
								},
								{
									"name": "System Statistics",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/admin/stats",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"stats"
											]
										}
									},
									"response": []
								},
								{
									"name": "List All Users (Admin)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/admin/users?include_deleted=true",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"users"
											],
											"query": [
												{
													"key": "include_deleted",
													"value": "true"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Activity Log",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/admin/activity",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"admin",
												"activity"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "User Role Management",
							"item": [
								{
									"name": "Assign Role to User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"roles\": [\"admin\", \"expositor\"]\n}"
										},
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"roles"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User Roles",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"roles"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Available Roles",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/roles",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"roles"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete User (Soft Delete)",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id/restore",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"restore"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Force Delete User",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id/force",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"force"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Deleted Users",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/deleted",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												"deleted"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get User Capabilities",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{jwt_token}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/api/v1/users/:id/capabilities",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"api",
												"v1",
												"users",
												":id",
												"capabilities"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/health",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"health"
					]
				}
			},
			"response": [
				{
					"name": "Success",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"health"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n    \"status\": \"healthy\",\n    \"message\": \"API is online\",\n    \"timestamp\": \"2024-08-29 21:15:30\",\n    \"service\": \"FEL API\",\n    \"version\": \"1.0.0\"\n}"
				}
			]
		}
	]
}